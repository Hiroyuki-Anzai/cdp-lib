{
  "name": "<% projectName %>",
  "version": "<% version %>",
  "description": "",
  "author": "",
  "main": "<% structureConfig.pkg %>/<% moduleName %><%# minify %>.min<%/ minify %>.js",
  "types": "<% structureConfig.pkg %>/<% structureConfig.types %>/<% projectName %>/index.d.ts",
  "scripts": {
    "build": "run-p build:*",
    "build:ts": "tsc && webpack",
    "prebuild:ts": "node ./<% structureConfig.task %>/build-ts-clean.js",
    "postbuild:ts": "node ./<% structureConfig.task %>/build-ts-normalize.js",
    <%# minify %>
    "minify": "uglifyjs <% structureConfig.pkg %>/<% moduleName %>.js -o <% structureConfig.pkg %>/<% moduleName %>.min.js --comments /^!/ --source-map includeSources,url=<% moduleName %>.min.js.map",
    <%/ minify %>
    "test": "run-s lint unit-test",
    "pretest": "tsc -p ./<% structureConfig.test %>/jasmine/tsconfig.json",
    "posttest": "cd ./<% structureConfig.doc %>/reports/coverage/_org && remap-istanbul -i coverage.json -o ../ -t html",
    "clean": "node ./<% structureConfig.task %>/clean.js",
    "depends": "npm list --depth=0",
    "depends:prod": "npm list --depth=0 --only=prod",
    "depends:dev": "npm list --depth=0 --only=dev",
    "lint": "run-s -l lint:*",
    "lint:js": "eslint <% structureConfig.task %>/**/*.js <% structureConfig.built %>/**/*.js -c <% structureConfig.test %>/eslint/eslintrc.json",
    "lint:ts": "tslint --type-check -p ./tsconfig.json -c ./<% structureConfig.test %>/tslint/tslint.json 'src/**/*.ts'",
    "unit-test": "istanbul cover ./node_modules/jasmine-node/bin/jasmine-node <% structureConfig.test %>/jasmine/ --dir <% structureConfig.doc %>/reports/coverage/_org",
    "document": "typedoc --out <% structureConfig.doc %>/typedoc/ src/",
    "metrics": "plato -r -d <% structureConfig.doc %>/reports/metrics -e ./<% structureConfig.test %>/eslint/eslintrc.json built/**.js",
    "ci": "run-s build test",
    "deploy": "run-s -l clean build<%# minify %> minify<%/ minify %> test metrics document",
    "debug": "node --inspect --debug-brk ./node_modules/jasmine-node/bin/jasmine-node <% structureConfig.test %>/jasmine/",
    "debug:tool": "node-debug ./node_modules/jasmine-node/bin/jasmine-node <% structureConfig.test %>/jasmine/",
    "update": "npm update --save-dev && npm update --save && npm run deploy"
  },
  <%# license %>
  "license": "<% license %>",
  <%/ license %>
  "dependencies": {
  },
  "devDependencies": {
    <%# devDependencies %>
    "<% name %>": "<% version %>"<%^ last %>,<%/ last %>
    <%/ devDependencies %>
  }
}
